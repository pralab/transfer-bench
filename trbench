#!/usr/bin/env python3

from argparse import ArgumentParser

import wandb
from benchmark.config import PROJECT_ENTITY, PROJECT_NAME
from benchmark.wandb_reader import WandbReader
from benchmark.utils import make_run_list, get_config_from_run, get_path_from_run, Run
from pandas import DataFrame


def parse_args() -> None:
    r"""Parse command line arguments."""
    parser = ArgumentParser(description="Command line tool for managing tasks.")
    subparser = parser.add_subparsers(dest="task", required=True)
    # Subparsers for getting informations on the runs
    parser_info = subparser.add_parser("info", help="Display informations on the runs.")
    parser_info.add_argument(
        dest="action",
        choices=["summary", "active", "completed", "missing"],
        default="summary",
        type=str,
        help="Info to display.",
    )
    # Subparser for running the experiments
    parser_run = subparser.add_parser(
        "run",
        help="Run a job from the list of availables.",
    )
    parser_run.add_argument("--run-id", type=str, help="ID of the run to be executed.")
    parser_run.add_argument("--device", type=str, help="Device to be used.")
    parser_run.add_argument("--batch-size", type=int, help="Batch size to be used.")

    return parser.parse_args()


DISPLAYED_COLUMNS = ["id", "attack", "victim_model", "dataset", "campaign"]


def format_runs(runs: list[Run]) -> str:
    r"""Format the runs for display."""

    ## get pandas dataframe
    return (
        DataFrame([get_config_from_run(run) for run in runs])
        .loc[:, DISPLAYED_COLUMNS]
        .to_string(index=False)
    )


def get_info(action: str) -> None:
    # Initialize the WandbReader
    wandb_connections = WandbReader(PROJECT_ENTITY, PROJECT_NAME)
    runs = wandb_connections.get_runs()
    print(f"Found {len(runs)} runs.")
    # Display the requested information
    [print(format_runs(runs)) for run in runs]


def run(run_id: str, device: str, batch_size: int) -> None:
    # Initialize the WandbReader
    wandb_connections = WandbReader(PROJECT_ENTITY, PROJECT_NAME)


if __name__ == "__main__":
    # Login to Weights & Biases
    wandb.login()
    # Parse the command line arguments

    # make_run_list()
    run_list = make_run_list()
    print(format_runs(run_list))
